//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Apps4KidsWeb.Persistence
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    
    public partial class Apps4KidsEntities : DbContext
    {
        public Apps4KidsEntities()
            : base("name=Apps4KidsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<App> Apps { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<CountryOfOrigin> CountryOfOrigins { get; set; }
        public DbSet<Picture> Pictures { get; set; }
        public DbSet<Producer> Producers { get; set; }
        public DbSet<Recention> Recentions { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<AppOS> AppOS { get; set; }
        public DbSet<Admin> Admins { get; set; }
        public DbSet<AuthentificationCode> AuthentificationCodes { get; set; }
        public DbSet<UserLock> UserLocks { get; set; }
        public DbSet<Recommendation> Recommendations { get; set; }
        public DbSet<ChangePasswordCode> ChangePasswordCodes { get; set; }
        public DbSet<Approved> Approveds { get; set; }
        public DbSet<Denied> Denieds { get; set; }
    
        public virtual int sp_RegisterUser(string userName, string password, string firstName, string lastName, string children, Nullable<int> countryOfOriginID, string authentificationCode)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("Children", children) :
                new ObjectParameter("Children", typeof(string));
    
            var countryOfOriginIDParameter = countryOfOriginID.HasValue ?
                new ObjectParameter("CountryOfOriginID", countryOfOriginID) :
                new ObjectParameter("CountryOfOriginID", typeof(int));
    
            var authentificationCodeParameter = authentificationCode != null ?
                new ObjectParameter("AuthentificationCode", authentificationCode) :
                new ObjectParameter("AuthentificationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegisterUser", userNameParameter, passwordParameter, firstNameParameter, lastNameParameter, childrenParameter, countryOfOriginIDParameter, authentificationCodeParameter);
        }
    
        public virtual ObjectResult<sp_Login_Result> sp_Login(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Login_Result>("sp_Login", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_Login_Result> sp_Authentificate(Nullable<int> userID, string authentificationCode)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var authentificationCodeParameter = authentificationCode != null ?
                new ObjectParameter("AuthentificationCode", authentificationCode) :
                new ObjectParameter("AuthentificationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Login_Result>("sp_Authentificate", userIDParameter, authentificationCodeParameter);
        }
    
        public virtual ObjectResult<sp_Login_Result> sp_changePassword(Nullable<int> userId, string password, string changePasswordCode)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var changePasswordCodeParameter = changePasswordCode != null ?
                new ObjectParameter("ChangePasswordCode", changePasswordCode) :
                new ObjectParameter("ChangePasswordCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Login_Result>("sp_changePassword", userIdParameter, passwordParameter, changePasswordCodeParameter);
        }
    
        public virtual int sp_changeUserPassword(Nullable<int> userID, string newPasswort)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var newPasswortParameter = newPasswort != null ?
                new ObjectParameter("NewPasswort", newPasswort) :
                new ObjectParameter("NewPasswort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_changeUserPassword", userIDParameter, newPasswortParameter);
        }
    
        public virtual int sp_GetProducerID(string producerName, ObjectParameter iD)
        {
            var producerNameParameter = producerName != null ?
                new ObjectParameter("ProducerName", producerName) :
                new ObjectParameter("ProducerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetProducerID", producerNameParameter, iD);
        }
    }
}
